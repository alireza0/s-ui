name: Release S-UI

on:
  push:
    tags:
      - "*"
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        platform:
          - amd64
          - arm64
          - armv7
          - armv6
          - armv5
          - 386
          - s390x
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
        with:
          submodules: recursive

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          cache: false
          go-version-file: go.mod

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Build frontend
        run: |
          cd frontend
          npm install
          npm run build
          cd ..
          mv frontend/dist web/html
          rm -fr frontend

      - name: Build s-ui
        run: |
          set -e
          export CGO_ENABLED=1
          export GOOS=linux
          export GOARCH=${{ matrix.platform }}

          TOOLCHAIN_URL=""
          case "${{ matrix.platform }}" in
            amd64)
              TOOLCHAIN_URL="https://musl.cc/x86_64-linux-musl-cross.tgz"
              ;;
            arm64)
              TOOLCHAIN_URL="https://musl.cc/aarch64-linux-musl-cross.tgz"
              ;;
            armv7)
              TOOLCHAIN_URL="https://musl.cc/armv7l-linux-musleabihf-cross.tgz"
              export GOARCH=arm
              export GOARM=7
              ;;
            armv6)
              TOOLCHAIN_URL="https://musl.cc/armv6-linux-musleabihf-cross.tgz"
              export GOARCH=arm
              export GOARM=6
              ;;
            armv5)
              TOOLCHAIN_URL="https://musl.cc/arm-linux-musleabi-cross.tgz"
              export GOARCH=arm
              export GOARM=5
              ;;
            386)
              TOOLCHAIN_URL="https://musl.cc/i686-linux-musl-cross.tgz"
              ;;
            s390x)
              TOOLCHAIN_URL="https://musl.cc/s390x-linux-musl-cross.tgz"
              ;;
          esac

          echo "Downloading musl toolchain for ${{ matrix.platform }}"
          curl -LO "$TOOLCHAIN_URL"
          tar -xf *.tgz
          TOOLCHAIN_DIR=$(find . -maxdepth 1 -type d -name "*-musl-cross" | head -n1)
          export PATH="$PWD/$TOOLCHAIN_DIR/bin:$PATH"

          # Detect compiler
          export CC=$(find $TOOLCHAIN_DIR/bin -name '*-musl-gcc' | head -n1)
          echo "Using CC=$CC"

          ### Build s-ui
          go build -ldflags="-w -s -linkmode external -extldflags '-static'" -tags "with_quic,with_grpc,with_ech,with_utls,with_reality_server,with_acme,with_gvisor" -o sui main.go
          file sui
          ldd sui || echo "Static binary confirmed"
          mkdir s-ui
          cp sui s-ui/
          cp s-ui.service s-ui/
          cp s-ui.sh s-ui/

      - name: Package
        run: tar -zcvf s-ui-linux-${{ matrix.platform }}.tar.gz s-ui

      - name: Upload
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          file: s-ui-linux-${{ matrix.platform }}.tar.gz
          asset_name: s-ui-linux-${{ matrix.platform }}.tar.gz
          prerelease: true
          overwrite: true
